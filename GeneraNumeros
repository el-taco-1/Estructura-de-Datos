/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package cuentanumeros;

import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author locop
 */
public class Cuentanumeros {

    public static void main(String[] args) {

        ListaNodo l;
        l = new ListaNodo();
        int opt = 0;
        do {

            Scanner sc = new Scanner(System.in);
            Scanner bo = new Scanner(System.in);
            Scanner se = new Scanner(System.in);
            Scanner ho = new Scanner(System.in);
            System.out.println("\n"
                    + "\n[1  - Generar Números]"
                    + "\n[2  - Ordenar]"
                    + "\n[3  - Eliminar Repetidos]"
                    + "\n[4  - Deletear Faltantes]"
                    + "\n[5  - mostar]"
                    + "\n[6  - Salir de Simulación]\n");

            switch (opt = sc.nextInt()) {
                case 1:
                    int max = 1000;
                    int min = 500;

                    for (int i = 1; i <= 500; i++) {
                        int xd = (int) (Math.random() * (max - min + 1) + min);
                        l.Numers(xd);
                        
                    }
                    
                    break;
                case 2:
                    l.Acomodar();
                    break;
                case 3:
                    l.Elimunar();
                    break;
                case 4:
                    l.Agregados();
                    break;
                case 5:
                    l.Muestra();
                    break;
            }
        } while (opt != 6);
    }
}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package cuentanumeros;

/**
 *
 * @author locop
 */
class ListaNodo {

    nodo inicio;
    nodo Punta;

    public void Numers(int Yes) {
        nodo temp = new nodo();
        temp.fer = Yes;
        if (inicio == null) {
            inicio = temp;
            inicio.sig = null;
            Punta = inicio;
        } else {
            Punta.sig = temp;
            temp.sig = null;
            Punta = temp;
        }
    }

    public void Elimunar() {
        for (int j = 1; j <= 500; j++) {
            int aux;
            nodo actual = inicio;
            nodo siguiente = actual.sig;
            nodo xd = new nodo();

            //  
            //    for (int j = 1; j <= 5; j++) {
            if (inicio != null) {
                while (actual.sig != null) {
                    if (actual.fer == siguiente.fer) {
                        actual.sig = siguiente.sig;
                        actual.fer = siguiente.fer;
                        siguiente.fer = actual.fer;
                    }
                    actual = siguiente;
                    siguiente = actual.sig;
                }

            }
        }
    }

    public void Acomodar() {

        for (int i = 1; i <= 500; i++) {
            int aux;
            nodo actual = inicio;
            nodo siguiente = actual.sig;
            //  
            //    for (int j = 1; j <= 5; j++) {
            if (inicio != null) {
                while (actual.sig != null) {
                    if (actual.fer < siguiente.fer) {
                        aux = actual.fer;
                        actual.fer = siguiente.fer;
                        siguiente.fer = aux;
                    }
                    actual = siguiente;
                    siguiente = actual.sig;
                }

            }
        }

        //   }
    }

    public void Muestra() {
        nodo ac = new nodo();
        ac = inicio;
        while (ac != null) {
            System.out.println(ac.fer);
            ac = ac.sig;
        }
    }

    public void Agregados() {
        nodo actual = new nodo();
        actual = inicio;
        int tope = 1000;
        int punta = 500;
        if (inicio != null) {
            while (punta <= tope) {
                nodo numerosf = new nodo();
                nodo anterior = null;
                numerosf = inicio;
                boolean encontrado = false;
                if (inicio != null) {
                    while (numerosf != null) {
                        if (punta == numerosf.fer) {
                            encontrado = true;
                        }
                        anterior = numerosf;
                        numerosf = numerosf.sig;
                    }
                }
                if (!encontrado) {
                    nodo temp = new nodo();
                    temp.fer = punta;
                    anterior.sig = temp;
                }
                punta++;
            }
        }
    }
}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package cuentanumeros;

/**
 *
 * @author locop
 */
class nodo {
    nodo sig;
    int fer;
    int Yes;
}
